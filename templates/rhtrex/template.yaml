---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rh-trex-app
  title: Create A New Application
  description: Create a New Application based on Red Hat's Example Application RH-Trex
spec:
  owner: backstage/techdocs-core #change to what?
  type: service
  parameters:
    # - $yaml: https://github.com/eemurphy/temp-software-templates/blob/main/templates/rhtrex/parameters.yaml
    - title: Application Name
      required:
      - appName
      properties:
        appName:
          title: Enter New Application Name
          type: string
          description: Enter the name you would like to be used for your application. Do not include any special characters (underscores and dashes are allowed)
          ui:autofocus: true
          ui:options:
            rows: 5       

    - title: Organization Name
      required:
      - orgName
      properties:
        orgName:
          title: Enter Organization or User's Name
          type: string
          description: Enter the name of the organization or user responsible for the new repository
          ui:autofocus: true
          ui:options:
            rows: 5

    - title: Choose a location
      required:
      - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts: #check on allowed hosts
              - github.com
              - gitlabs.com     
  
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          appName: ${{ parameters.appName }}
          orgName: ${{ parameters.orgName }}
          repoUrl: ${{ parameters.repoUrl }}
          token: ${{ parameters.token }}

    
    #EDIT APP FROM RHTREX, AND COMMIT
    - id: fetch-plain
      name: Fetch rhtrex Template
      action: fetch:plain
      input:
        url: 'https://github.com/eemurphy/brontosaurus.git'
        targetPath: '${{ parameters.appName }}_template'
        branch: 'test123'
    
    - id: parsefile
      name: Parse File
      action: roadiehq:utils:fs:parse
      input:
        path: ${{ parameters.appName }}_template/parse-trex.yml
        parser: yaml

    - id: replace-app-gh
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') == 'github.com' }}
      name: Replace app URL - Github
      action: roadiehq:utils:fs:replace
      each: ${{ steps.parsefile.output.content }}
      input:
        files:
          - file: ${{ parameters.appName }}_template/${{ each.value }}
            find: 'https://github\.com/openshift-online/rh-trex'
            replaceWith: ${{ parameters.repoUrl }} #fix ERIN
            matchRegex: true
            

    - id: replace-app-gl
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') == 'gitlab.com' }}
      name: Replace app URL - GitLabs
      action: roadiehq:utils:fs:replace
      input:
        files:
          - file: ${{ parameters.appName }}_template/**/*.*
            find: 'https://github\.com/openshift-online/rh-trex'
            replaceWith: ${{ parameters.repoUrl }}
            matchRegex: true

    - id: replace-rh-trex
      name: Replace 'rh-trex' with appName
      action: roadiehq:utils:fs:replace
      input:
        files:
          - file: ${{ parameters.appName }}_template/**/*.*
            find: 'rh-trex'
            replaceWith: ${{ parameters.appName }}
            matchRegex: true

    - id: sanitize-name
      name: Sanitize app name
      action: regex:replace
      input:
        regExps:
          - pattern: '[^a-zA-Z0-9_]'
            replacement: ''
            values:
              - key: sanitizeAppName
                value: ${{ parameters.appName }}

    - id: replace-rhtrex
      name: Replace occurrences of rhtrex
      action: roadiehq:utils:fs:replace
      input:
        files:
          - file: ${{ parameters.appName }}_template/**/*.*
            find: 'rhtrex'
            replaceWith: ${{ steps.sanitize-name.output.sanitizedValue }}
            matchRegex: true

    - id: replace-trex-service
      name: Replace 'trex' with appName-service
      action: roadiehq:utils:fs:replace
      input:
        files:
          - file: ${{ parameters.appName }}_template/**/*.*
            find: 'trex'
            replaceWith: ${{ parameters.appName }}-service
            matchRegex: true

    - id: rename-all
      name: Rename files and directories
      action: fs:rename
      input:
        files:
          - from: ${{ parameters.appName }}_template/rh-trex/.tekton/rh-trex-pull-request.yaml
            to: ${{ parameters.appName }}_template/.tekton/${{ parameters.appName }}-pull-request.yaml
          - from: ${{ parameters.appName }}_template/rh-trex/.tekton/rh-trex-push.yaml
            to: ${{ parameters.appName }}_template/.tekton/${{ parameters.appName }}-push.yaml
          - from: ${{ parameters.appName }}_template/rh-trex/cmd/trex
            to: ${{ parameters.appName }}_template/rh-trex/cmd/${{ parameters.appName }}
          - from: ${{ parameters.appName }}_template/rh-trex
            to: ${{ parameters.appName }}_template/${{ parameters.appName }}
            overwrite: true

    - id: push-gh-repo
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') == 'github.com' }}
      name: Push to Github Repository
      action: publish:github
      input:
        allowedHosts: ${{ parameters.repoLoc.ui.options.allowedHosts }}
        repoUrl: 'github.com?repo=${{ parameters.appName }}&owner=${{ parameters.orgName }}'
        branch: main
        sourcePath: '${{ parameters.appName }}_template'

    - id: push-gl-repo
      if: ${{ parameters.repoUrl | parseRepoUrl | pick('host') == 'gitlab.com' }}
      name: Push to Gitlab Repository
      action: publish:gitlab
      input:
        allowedHosts: ${{ parameters.repoLoc.ui.options.allowedHosts }}
        repoUrl: 'gitlab.com?repo=${{ parameters.appName }}&owner=${{ parameters.orgName }}'
        branch: main
        targetPath: '${{ parameters.appName }}_template'

  output:
    content: ${{ steps.parsefile.output.content }}

  # output:
  #   - name: Repository URL
  #     description: The URL of the newly created repository
  #     value: ${{ steps.publish.output.remoteUrl }}
